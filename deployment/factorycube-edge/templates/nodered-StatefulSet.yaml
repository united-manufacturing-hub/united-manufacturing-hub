{{- if .Values.nodered.enabled -}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "factorycube-edge.fullname" . }}-nodered
  labels:
    {{- include "factorycube-edge.labels.nodered" . | nindent 4 }}
spec:
  serviceName: {{ include "factorycube-edge.fullname" . }}-nodered
  replicas: 1
  selector:
    matchLabels:
      {{- include "factorycube-edge.labels.nodered" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "factorycube-edge.labels.nodered" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      initContainers:
      - name: {{ include "factorycube-edge.fullname" . }}-nodered-init
        image: busybox:1.28
        command: ['sh', '-c', 'false | cp -ir /data/flows.default /data/flows.json 2>/dev/null']
        volumeMounts:
        - name: {{ include "factorycube-edge.fullname" . }}-nodered-data
          mountPath: /data
        - name: {{ include "factorycube-edge.fullname" . }}-nodered-flows
          mountPath: /data/flows.default
          subPath: nodered-flows 
      {{ if .Values.nodered.pluginInstallEnabled }}
      - name: {{ include "factorycube-edge.fullname" . }}-nodered-init-plugin
        image: node:14
        command: 
        - 'sh'
        - '-c'
        args:
        - if ping -q -w1 -c1 google.com; then echo ONLINE; else echo OFFLINE && exit 0; fi; 
          cd /data;
          if mkdir DO_NOT_DELETE; then 
            {{ default "" .Values.nodered.pluginInstallLines | nindent 12}}
            
          else 
            echo "Initial installation already completed. Please use Node-RED UI for further package installations";
            exit 0; 
          fi;
        volumeMounts:
        - name: {{ include "factorycube-edge.fullname" . }}-nodered-data
          mountPath: /data
      {{- end }}
      containers:
      - name: {{ include "factorycube-edge.fullname" . }}-nodered
        image: nodered/node-red:{{ .Values.nodered.tag }}
        ports:
        - containerPort: 1880
          name: nodered-ui
        livenessProbe:
          httpGet:
            path: /nodered
            port: 1880
        readinessProbe:
          httpGet:
            path: /nodered
            port: 1880
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - name: {{ include "factorycube-edge.fullname" . }}-nodered-data
          mountPath: /data
        - name: {{ include "factorycube-edge.fullname" . }}-nodered-config
          mountPath: /data/settings.js
          subPath: nodered-config 
          readOnly: true  
        env:
        {{- range $ENV_NAME, $ENV_CONTENT := .Values.nodered.env | default dict }}
        - name: {{ $ENV_NAME }}
          value: {{ $ENV_CONTENT | quote }}
        {{- end }}
        - name: TZ
          value: {{ .Values.nodered.timezone }}
      volumes:
      - name: {{ include "factorycube-edge.fullname" . }}-nodered-data
        persistentVolumeClaim:
          claimName: {{ include "factorycube-edge.fullname" . }}-nodered-claim
      - name: {{ include "factorycube-edge.fullname" . }}-nodered-flows 
        configMap:
          name: {{ include "factorycube-edge.fullname" . }}-nodered-flows 
      - name: {{ include "factorycube-edge.fullname" . }}-nodered-config 
        configMap:
          name: {{ include "factorycube-edge.fullname" . }}-nodered-config 

{{- end }}
