name: Release Helm Chart and Docker container

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for semantic-release to analyze all commits

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          dry_run: false
          branch: main
          extra_plugins: |
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Outputs
        run: |
          echo "::set-output name=new_release_published::${{ steps.semantic.outputs.new_release_published }}"
          echo "::set-output name=new_release_version::${{ steps.semantic.outputs.new_release_version }}"

  build-barcodereader:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/barcodereader/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/barcodereader:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/barcodereader:latest

  build-databridge:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/databridge/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/databridge:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/databridge:latest

  build-factoryinsight:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/factoryinsight/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/factoryinsight:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/factoryinsight:latest

  build-grafana-umh:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/grafana-umh/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/grafana-umh:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/grafana-umh:latest

  build-hivemq-init:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/hivemq-init/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/hivemq-init:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/hivemq-init:latest

  build-kafka-bridge:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/kafka-bridge/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/kafka-bridge:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/kafka-bridge:latest

  build-kafka-init:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/kafka-init/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/kafka-init:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/kafka-init:latest

  build-kafka-to-postgresql:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/kafka-to-postgresql/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/kafka-to-postgresql:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/kafka-to-postgresql:latest


  build-kafka-to-postgresql-v2:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/kafka-to-postgresql-v2/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/kafka-to-postgresql-v2:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/kafka-to-postgresql-v2:latest


  build-metrics:
    
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/metrics/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/metrics:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/metrics:latest

  build-mqtt-kafka-bridge:
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/mqtt-kafka-bridge/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/mqtt-kafka-bridge:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/mqtt-kafka-bridge:latest


  build-sensorconnect:    
    permissions:
      packages: write
      contents: read
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/sensorconnect/Dockerfile
          push: true
          tags: |
            ghcr.io/united-manufacturing-hub/sensorconnect:${{ needs.release.outputs.new_release_version }}
            ghcr.io/united-manufacturing-hub/sensorconnect:latest


  