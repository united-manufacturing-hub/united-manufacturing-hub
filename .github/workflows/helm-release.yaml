name: Release Helm Chart

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Important for semantic-release to analyze all commits

      - name: Install Helm
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          dry_run: false
          branch: main
          extra_plugins: |
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-barcodereader:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push barcodereader Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/barcodereader:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/barcodereader:latest ./deployment/barcodereader/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/barcodereader:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/barcodereader:latest

  build-factoryinput:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push factoryinput Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/factoryinput:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/factoryinput:latest ./deployment/factoryinput/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/factoryinput:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/factoryinput:latest

  build-factoryinsight:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push factoryinsight Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/factoryinsight:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/factoryinsight:latest ./deployment/factoryinsight/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/factoryinsight:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/factoryinsight:latest

  build-grafana-proxy:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push grafana-proxy Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/grafana-proxy:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/grafana-proxy:latest ./deployment/grafana-proxy/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/grafana-proxy:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/grafana-proxy:latest

  build-grafana-umh:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push grafana-umh Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/grafana-umh:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/grafana-umh:latest ./deployment/grafana-umh/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/grafana-umh:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/grafana-umh:latest

  build-hivemq-init:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push hivemq-init Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/hivemq-init:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/hivemq-init:latest ./deployment/hivemq-init/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/hivemq-init:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/hivemq-init:latest

  build-kafka-bridge:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push kafka-bridge Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/kafka-bridge:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/kafka-bridge:latest ./deployment/kafka-bridge/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/kafka-bridge:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/kafka-bridge:latest

  build-kafka-debug:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push kafka-debug Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/kafka-debug:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/kafka-debug:latest ./deployment/kafka-debug/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/kafka-debug:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/kafka-debug:latest

  build-kafka-init:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push kafka-init Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/kafka-init:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/kafka-init:latest ./deployment/kafka-init/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/kafka-init:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/kafka-init:latest

  build-kafka-state-detector:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push kafka-state-detector Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/kafka-state-detector:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/kafka-state-detector:latest ./deployment/kafka-state-detector/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/kafka-state-detector:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/kafka-state-detector:latest

  build-kafka-to-postgresql:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push kafka-to-postgresql Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/kafka-to-postgresql:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/kafka-to-postgresql:latest ./deployment/kafka-to-postgresql/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/kafka-to-postgresql:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/kafka-to-postgresql:latest

  build-kafka-to-postgresql-v2:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push kafka-to-postgresql-v2 Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/kafka-to-postgresql-v2:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/kafka-to-postgresql-v2:latest ./deployment/kafka-to-postgresql-v2/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/kafka-to-postgresql-v2:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/kafka-to-postgresql-v2:latest

  build-metrics:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push metrics Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/metrics:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/metrics:latest ./deployment/metrics/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/metrics:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/metrics:latest

  build-mqtt-bridge:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push mqtt-bridge Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/mqtt-bridge:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/mqtt-bridge:latest ./deployment/mqtt-bridge/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/mqtt-bridge:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/mqtt-bridge:latest

  build-mqtt-kafka-bridge:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push mqtt-kafka-bridge Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/mqtt-kafka-bridge:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/mqtt-kafka-bridge:latest ./deployment/mqtt-kafka-bridge/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/mqtt-kafka-bridge:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/mqtt-kafka-bridge:latest

  build-sensorconnect:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push sensorconnect Docker Image
        run: |
          docker build -t ghcr.io/united-manufacturing-hub/sensorconnect:${{ needs.release.outputs.new_release_version }}
                     -t ghcr.io/united-manufacturing-hub/sensorconnect:latest ./deployment/sensorconnect/Dockerfile
          docker push ghcr.io/united-manufacturing-hub/sensorconnect:${{ needs.release.outputs.new_release_version }}
          docker push ghcr.io/united-manufacturing-hub/sensorconnect:latest

  