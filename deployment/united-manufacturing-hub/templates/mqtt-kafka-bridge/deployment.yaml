# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
{{if or .Values.mqttkafkabridge.enabled (and .Values._000_commonConfig.infrastructure.mqtt.enabled .Values._000_commonConfig.infrastructure.kafka.enabled)}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge
  labels:
    {{- include "united-manufacturing-hub.labels.common" . | nindent 4}}
    {{- include "united-manufacturing-hub.labels.mqttkafkabridge" . | nindent 4}}
  {{if .Values.mqttkafkabridge.annotations}}
  annotations:
    {{- toYaml .Values.mqttkafkabridge.annotations | nindent 4}}
  {{end}}
spec:
  replicas: {{.Values.mqttkafkabridge.replicas}}
  selector:
    matchLabels:
      {{- include "united-manufacturing-hub.matchLabels" . | nindent 6}}
      {{- include "united-manufacturing-hub.labels.mqttkafkabridge" . | nindent 6}}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "united-manufacturing-hub.labels.common" . | nindent 8}}
        {{- include "united-manufacturing-hub.labels.mqttkafkabridge" . | nindent 8}}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge
                topologyKey: "kubernetes.io/hostname"
      initContainers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge-init-newtopic
          {{if .Values.mqttkafkabridge.image.tag}}
          image: {{.Values.mqttkafkabridge.initContainer.repository}}:{{.Values.mqttkafkabridge.initContainer.tag}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{- else}}
          image: {{.Values.mqttkafkabridge.initContainer.repository}}:{{.Chart.AppVersion}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{end}}
          imagePullPolicy: {{.Values.mqttkafkabridge.initContainer.pullPolicy}}
          env:
            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{include "united-manufacturing-hub.fullname" .}}-kafka:9092
            - name: KAFKA_TOPICS
              value: umh.v1.kafka.newTopic

            - name: KAFKA_USE_SSL
              value: {{ .Values._000_commonConfig.infrastructure.kafka.useSSL | default "false" | quote}}
            - name: KAFKA_SSL_KEY_PASSWORD
              {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
              value: {{ .Values._000_commonConfig.infrastructure.kafka.tls.mqttkafkabridge.sslKeyPassword | quote}}
              {{- else}}
              value: ""
              {{- end}}
      containers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge
          {{if .Values.mqttkafkabridge.image.tag}}
          image: {{.Values.mqttkafkabridge.image.repository}}:{{.Values.mqttkafkabridge.image.tag}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{- else}}
          image: {{.Values.mqttkafkabridge.image.repository}}:{{.Chart.AppVersion}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{end}}
          imagePullPolicy: {{.Values.mqttkafkabridge.image.pullPolicy}}
          {{if .Values._000_commonConfig.debug.enableFGTrace}}
          ports:
            - containerPort: 1337
              name: fgtrace
              protocol: TCP
          {{end}}
          # define a liveness probe that checks every 5 seconds, starting after 5 seconds
          livenessProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 10
            failureThreshold: 5 # 5*periodSeconds (10) => 50 sec max startup time

          env:
            - name: MQTT_BROKER_URL
              {{- if .Values._000_commonConfig.infrastructure.mqtt.tls.useTLS}}
              value: ssl://{{include "united-manufacturing-hub.fullname" .}}-hivemqce-local-service:8883
              {{- else}}
              value: mqtt://{{include "united-manufacturing-hub.fullname" .}}-hivemqce-local-service:1883
              {{- end}}

            - name: MQTT_CERTIFICATE_NAME
              {{- if .Values._000_commonConfig.infrastructure.mqtt.tls.useTLS}}
              value: "USE_TLS"
              {{- else}}
              value: "NO_CERT"
              {{- end}}

            - name: MQTT_TOPIC
              value: "ia/#"

            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{include "united-manufacturing-hub.fullname" .}}-kafka:9092

            - name: KAFKA_LISTEN_TOPIC
              value: "^ia.+"

            - name: KAFKA_BASE_TOPIC
              value: "ia"

            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MICROSERVICE_NAME
              valueFrom:
                fieldRef:
                    fieldPath: metadata.labels['app.kubernetes.io/name']

            - name: SERIAL_NUMBER
              value: {{.Values._000_commonConfig.serialNumber}}

            - name: KAFKA_USE_SSL
              value: {{.Values._000_commonConfig.infrastructure.kafka.useSSL | default "false" | quote}}
            - name: KAFKA_SSL_KEY_PASSWORD
              {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
              value: {{ .Values._000_commonConfig.infrastructure.kafka.tls.mqttkafkabridge.sslKeyPassword | quote}}
              {{- else}}
              value: ""
              {{- end}}

            - name: MQTT_PASSWORD
              value: {{.Values.mqttkafkabridge.mqtt.password | quote}}
            - name: INSECURE_SKIP_VERIFY
              value: {{.Values._000_commonConfig.infrastructure.mqtt.tls.insecureSkipVerify | quote}}

            - name: RAW_MESSAGE_LRU_SIZE
              value: {{.Values.mqttkafkabridge.rawMessageLRUSize | quote}}
            - name: MESSAGE_LRU_SIZE
              value: {{.Values.mqttkafkabridge.messageLRUSize | quote}}
            - name: MQTT_SENDER_THREADS
              value: {{.Values.mqttkafkabridge.mqttSenderThreads | quote}}
            - name: KAFKA_SENDER_THREADS
              value: {{.Values.mqttkafkabridge.kafkaSenderThreads | quote}}
            - name: KAFKA_ACCEPT_NO_ORIGIN
              value: {{.Values.mqttkafkabridge.kafkaAcceptNoOrigin | quote}}
            {{if .Values._000_commonConfig.debug.enableFGTrace}}
            - name: DEBUG_ENABLE_FGTRACE
              value: "true"
            {{end}}

          resources:
            limits:
              cpu: {{.Values.mqttkafkabridge.resources.limits.cpu}}
              memory: {{.Values.mqttkafkabridge.resources.limits.memory}}
            requests:
              cpu: {{.Values.mqttkafkabridge.resources.requests.cpu}}
              memory: {{.Values.mqttkafkabridge.resources.requests.memory}}
          volumeMounts:
            - name: kubernetes-ca
              mountPath: /certs/kubernetes-ca.pem
              subPath: ca.crt
            {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
            - name: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge-kafka-certificates
              mountPath: /SSL_certs/kafka
              readOnly: true
            {{end}}
            - name: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge-mqtt-certificates
              mountPath: /SSL_certs/mqtt
              readOnly: true

      volumes:
        - name: kubernetes-ca
          configMap:
            name: kube-root-ca.crt
        {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
        - name: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge-kafka-certificates
          secret:
            secretName: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge-kafka-secrets
        {{end}}
        - name: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge-mqtt-certificates
          secret:
            secretName: {{include "united-manufacturing-hub.fullname" .}}-mqttkafkabridge-mqtt-secrets

      serviceAccountName: ""
      restartPolicy: Always
{{end}}

