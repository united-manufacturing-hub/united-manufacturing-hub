# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
{{if .Values._000_commonConfig.dataprocessing.nodered.enabled}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{include "united-manufacturing-hub.fullname" .}}-nodered-flows
  labels:
    {{- include "united-manufacturing-hub.labels.common" . | nindent 4}}
    {{- include "united-manufacturing-hub.labels.nodered" . | nindent 4}}
data:
  nodered-flows: |- 
    {{- $settings := default .Values.nodered.flows | toPrettyJson }}
    {{- if eq ($settings | toJson) "{}" }}
    [
    {
        "id": "41c9c6783cbe3070",
        "type": "tab",
        "label": "Example flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "45f7c4f7.dff1cc",
        "type": "tab",
        "label": "Machine data genenerator",
        "disabled": false,
        "info": ""
    },
    {
        "id": "587a158d.20327c",
        "type": "subflow",
        "name": "addShift",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 100,
                "wires": [
                    {
                        "id": "d4c91958.7b47b8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#D5F0FF",
        "icon": "font-awesome/fa-calendar"
    },
    {
        "id": "9d0bf5c6.2530b8",
        "type": "subflow",
        "name": "output_to_activity",
        "info": "",
        "category": "ia: nodes",
        "in": [],
        "out": [],
        "env": [
            {
                "name": "max_duration",
                "type": "num",
                "value": "10",
                "ui": {
                    "icon": "font-awesome/fa-clock-o",
                    "label": {
                        "en-US": "max_duration"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            },
            {
                "name": "customerID",
                "type": "str",
                "value": "samplecustomerID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "location",
                "type": "str",
                "value": "samplelocation",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "AssetID",
                "type": "str",
                "value": "sampleAssetID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            }
        ],
        "color": "#D5F0FF",
        "icon": "node-red/sort.svg"
    },
    {
        "id": "882af5a6.a58b28",
        "type": "subflow",
        "name": "state_logic",
        "info": "",
        "category": "ia: nodes",
        "in": [],
        "out": [],
        "env": [
            {
                "name": "customerID",
                "type": "str",
                "value": "samplecustomerID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "location",
                "type": "str",
                "value": "samplelocation",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "AssetID",
                "type": "str",
                "value": "sampleAssetID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#D5F0FF",
        "icon": "node-red/status.svg"
    },
    {
        "id": "ae592577.420618",
        "type": "subflow",
        "name": "processvalue",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "d996e872.8c0c88"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "namePV",
                "type": "str",
                "value": "yourProcessValueName",
                "ui": {
                    "icon": "font-awesome/fa-text-width",
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "customerID",
                "type": "str",
                "value": "samplecustomerID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "location",
                "type": "str",
                "value": "samplelocation",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "AssetID",
                "type": "str",
                "value": "sampleAssetID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#D5F0FF",
        "icon": "font-awesome/fa-area-chart"
    },
    {
        "id": "fc9d8f9c.14845",
        "type": "subflow",
        "name": "count",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 120,
                "wires": [
                    {
                        "id": "a85c6ef3.fcf27"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "customerID",
                "type": "str",
                "value": "samplecustomerID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "location",
                "type": "str",
                "value": "samplelocation",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "AssetID",
                "type": "str",
                "value": "sampleAssetID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            }
        ],
        "color": "#D5F0FF",
        "icon": "node-red-dashboard/ui_chart.png"
    },
    {
        "id": "b60b06bc.cdb4c8",
        "type": "subflow",
        "name": "detectedAnomaly",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "c9fa6d5b.84b01"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "customerID",
                "type": "str",
                "value": "samplecustomerID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "location",
                "type": "str",
                "value": "samplelocation",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "AssetID",
                "type": "str",
                "value": "sampleAssetID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            }
        ],
        "color": "#D5F0FF",
        "icon": "node-red/alert.svg"
    },
    {
        "id": "b77cb6f5.685178",
        "type": "subflow",
        "name": "activity",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "6e72af6b.e6363"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "customerID",
                "type": "str",
                "value": "samplecustomerID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "location",
                "type": "str",
                "value": "samplelocation",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "AssetID",
                "type": "str",
                "value": "sampleAssetID",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            }
        ],
        "color": "#D5F0FF",
        "icon": "node-red/serial.svg"
    },
    {
        "id": "62375092.d1012",
        "type": "group",
        "z": "45f7c4f7.dff1cc",
        "name": "Sample Data",
        "style": {
            "stroke": "none",
            "fill": "#DAECF0",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "6e3f046.47cecfc",
            "f8283b61.08d9e8",
            "5b0afc76.d39564",
            "20f4ef35.92e22",
            "5649a4d0.ce43ec",
            "3b5e6754.ff4f18"
        ],
        "x": 34,
        "y": 19
    },
    {
        "id": "7cef6b1d.d23a54",
        "type": "group",
        "z": "45f7c4f7.dff1cc",
        "name": "United Manufacturing Hub Nodered-connectors",
        "style": {
            "fill": "#2D393D",
            "fill-opacity": "0.66",
            "label": true,
            "color": "#ffffff",
            "label-position": "n",
            "stroke": "none"
        },
        "nodes": [
            "96c50010.c50af",
            "ae8cdaa6.a56a68",
            "c8d8afe1.59fa",
            "246a1685.58379a",
            "7bb0392e.8a3bf8",
            "b34237d9.7d2cc8",
            "e61e8604.509d48"
        ],
        "x": 474,
        "y": 19
    },
    {
        "id": "ba92812b.1beda",
        "type": "group",
        "z": "45f7c4f7.dff1cc",
        "name": "Selection of standard interfaces",
        "style": {
            "stroke": "none",
            "fill": "#DAECF0",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "c3372d57.50822",
            "37c52f75.d6a81",
            "a8e1a854.89e108",
            "cdd3a9a3.ceed18",
            "28b0d095.a6f2e",
            "15717681.474919",
            "28ac3b5b.0c6e64",
            "37c52f75.d6a81",
            "6c82df5c.fb975",
            "392b9fc.5171e6"
        ],
        "x": 54,
        "y": 459
    },
    {
        "id": "5dff9791.d1b278",
        "type": "mqtt_broker",
        "name": "",
        "broker": "united-manufacturing-hub-hivemqce",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d4c91958.7b47b8",
        "type": "function",
        "z": "587a158d.20327c",
        "name": "Create Shift",
        "func": "timestamp_ms = Date.now() \ntimestamp_ms_end = timestamp_ms + (msg.duration_in_minutes * 60*1000)\n\nmsg.payload = {\n \"timestamp_ms\": timestamp_ms, \n \"timestamp_ms_end\": timestamp_ms_end,\n}\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/addShift\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 100,
        "wires": [
            [
                "38e4349e.30f73c"
            ]
        ]
    },
    {
        "id": "38e4349e.30f73c",
        "type": "mqtt out",
        "z": "587a158d.20327c",
        "name": "MQTT-OUT: Verarbeitete Daten",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5dff9791.d1b278",
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "1a01904d.a305b",
        "type": "json",
        "z": "9d0bf5c6.2530b8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 100,
        "wires": [
            [
                "d5821e95.eb077"
            ]
        ]
    },
    {
        "id": "85638585.b5dfb8",
        "type": "mqtt in",
        "z": "9d0bf5c6.2530b8",
        "name": "MQTT-IN: output",
        "topic": "ia/+/+/+/count",
        "qos": "2",
        "datatype": "auto",
        "broker": "5dff9791.d1b278",
        "nl": false,
        "rap": false,
        "x": 100,
        "y": 100,
        "wires": [
            [
                "1a01904d.a305b"
            ]
        ]
    },
    {
        "id": "d5821e95.eb077",
        "type": "function",
        "z": "9d0bf5c6.2530b8",
        "name": "Check for exakt Topic",
        "func": "var topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/count\"\nif (topic == msg.topic) {\n msg.payload = msg.payload\n} else {\n msg.payload = null;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 100,
        "wires": [
            [
                "dc440bb.3e238f8"
            ]
        ]
    },
    {
        "id": "dc440bb.3e238f8",
        "type": "switch",
        "z": "9d0bf5c6.2530b8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 100,
        "wires": [
            [
                "c52cba61.6b62d8"
            ]
        ]
    },
    {
        "id": "b9e10ec3.94988",
        "type": "function",
        "z": "9d0bf5c6.2530b8",
        "name": "Format: activity ",
        "func": "msg.payload = {\n\"timestamp_ms\": Date.now(),\n\"activity\": msg.payload\n}\n\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/activity\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 100,
        "wires": [
            [
                "55c7ebc4.703714"
            ]
        ]
    },
    {
        "id": "55c7ebc4.703714",
        "type": "mqtt out",
        "z": "9d0bf5c6.2530b8",
        "name": "MQTT-OUT: Verarbeitete Daten",
        "topic": "",
        "qos": "2",
        "retain": "",
        "broker": "5dff9791.d1b278",
        "x": 1670,
        "y": 100,
        "wires": []
    },
    {
        "id": "a0736c99.0b8bc",
        "type": "rbe",
        "z": "9d0bf5c6.2530b8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1250,
        "y": 100,
        "wires": [
            [
                "b9e10ec3.94988"
            ]
        ]
    },
    {
        "id": "c52cba61.6b62d8",
        "type": "function",
        "z": "9d0bf5c6.2530b8",
        "name": "",
        "func": "flow.set(\"ts_last_output\", Date.now())\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3f8212b6.7c6b8e",
        "type": "function",
        "z": "9d0bf5c6.2530b8",
        "name": "",
        "func": "if (flow.get(\"ts_last_output\")==undefined) {\n flow.set(\"ts_last_output\", Date.now())\n return null;\n} else if ((Date.now()-flow.get(\"ts_last_output\"))<env.get(\"max_duration\")*1000) {\n msg.payload = true;\n} else {\n msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 100,
        "wires": [
            [
                "a0736c99.0b8bc"
            ]
        ]
    },
    {
        "id": "1a8345c1.409d4a",
        "type": "inject",
        "z": "9d0bf5c6.2530b8",
        "name": "",
        "repeat": "0.25",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 930,
        "y": 100,
        "wires": [
            [
                "3f8212b6.7c6b8e"
            ]
        ]
    },
    {
        "id": "b3c8f72d.df9cb8",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "State logic",
        "func": "msg.payload = msg.payload.detectedAnomaly\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 120,
        "wires": [
            [
                "8515bd04.5e05b"
            ]
        ]
    },
    {
        "id": "39cac321.c87fbc",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "get currentactivity",
        "func": "msg.payload.currentActivity = flow.get(\"currentActivity\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 120,
        "wires": [
            [
                "8f417e0a.f6dc9"
            ]
        ]
    },
    {
        "id": "8f417e0a.f6dc9",
        "type": "switch",
        "z": "882af5a6.a58b28",
        "name": "Only when machine is not running",
        "property": "payload.currentActivity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1080,
        "y": 120,
        "wires": [
            [
                "b3c8f72d.df9cb8"
            ]
        ]
    },
    {
        "id": "e25eb0a9.c84f1",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "set currentactivity",
        "func": "flow.set(\"currentActivity\",msg.payload.activity)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 40,
        "wires": [
            [
                "a53182a9.61bec"
            ]
        ]
    },
    {
        "id": "13ec32fe.d3a99d",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "Format: state (Machine Not Running with reason)",
        "func": "msg.payload = {\n\"timestamp_ms\": Date.now(),\n\"state\": parseInt(msg.payload)\n}\nflow.set(\"currentState\",msg.payload.state)\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/state\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 120,
        "wires": [
            [
                "dae1723d.6a99f"
            ]
        ]
    },
    {
        "id": "a53182a9.61bec",
        "type": "switch",
        "z": "882af5a6.a58b28",
        "name": "",
        "property": "payload.activity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 40,
        "wires": [
            [
                "1a46ed5a.1bc5a3"
            ],
            [
                "947fea87.7b4ba8",
                "4b651e29.d8987"
            ]
        ]
    },
    {
        "id": "1a46ed5a.1bc5a3",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "Format: state (Machine running)",
        "func": "msg.payload = {\n\"timestamp_ms\": Date.now(),\n\"state\": 0\n}\nflow.set(\"currentState\",msg.payload.state)\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/state\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 40,
        "wires": [
            [
                "dae1723d.6a99f"
            ]
        ]
    },
    {
        "id": "de0540c3.06dbd",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "Format: state (Machine not running no reason specified)",
        "func": "msg.payload = {\n\"timestamp_ms\": Date.now(),\n\"state\": 40000\n}\nflow.set(\"currentState\",msg.payload.state)\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/state\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 80,
        "wires": [
            [
                "dae1723d.6a99f"
            ]
        ]
    },
    {
        "id": "dae1723d.6a99f",
        "type": "mqtt out",
        "z": "882af5a6.a58b28",
        "name": "MQTT-OUT: Verarbeitete Daten",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5dff9791.d1b278",
        "x": 2090,
        "y": 80,
        "wires": []
    },
    {
        "id": "8515bd04.5e05b",
        "type": "switch",
        "z": "882af5a6.a58b28",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1450,
        "y": 120,
        "wires": [
            [
                "13ec32fe.d3a99d"
            ]
        ]
    },
    {
        "id": "998214b0.4c1f38",
        "type": "json",
        "z": "882af5a6.a58b28",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 40,
        "wires": [
            [
                "c14538f4.87cec8"
            ]
        ]
    },
    {
        "id": "22e3fbe0.e64c64",
        "type": "mqtt in",
        "z": "882af5a6.a58b28",
        "name": "MQTT-IN: activity",
        "topic": "ia/+/+/+/activity",
        "qos": "2",
        "datatype": "auto",
        "broker": "5dff9791.d1b278",
        "nl": false,
        "rap": false,
        "x": 100,
        "y": 40,
        "wires": [
            [
                "998214b0.4c1f38"
            ]
        ]
    },
    {
        "id": "c14538f4.87cec8",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "Check for exakt Topic",
        "func": "var topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/activity\"\nif (topic == msg.topic) {\n msg.payload = msg.payload\n} else {\n msg.payload = null;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 40,
        "wires": [
            [
                "e6293a0b.38e8b8"
            ]
        ]
    },
    {
        "id": "e6293a0b.38e8b8",
        "type": "switch",
        "z": "882af5a6.a58b28",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "e25eb0a9.c84f1"
            ]
        ]
    },
    {
        "id": "5ae068fb.be12a8",
        "type": "mqtt in",
        "z": "882af5a6.a58b28",
        "name": "MQTT-IN: detectedAnomaly",
        "topic": "ia/+/+/+/detectedAnomaly",
        "qos": "2",
        "datatype": "auto",
        "broker": "5dff9791.d1b278",
        "nl": false,
        "rap": false,
        "x": 140,
        "y": 120,
        "wires": [
            [
                "8e9ed065.211af"
            ]
        ]
    },
    {
        "id": "8e9ed065.211af",
        "type": "json",
        "z": "882af5a6.a58b28",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "4a120d3d.8fad64"
            ]
        ]
    },
    {
        "id": "4a120d3d.8fad64",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "Check for exakt Topic",
        "func": "var topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/detectedAnomaly\"\nif (topic == msg.topic) {\n msg.payload = msg.payload\n} else {\n msg.payload = null;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 120,
        "wires": [
            [
                "a82cfed9.9856a"
            ]
        ]
    },
    {
        "id": "a82cfed9.9856a",
        "type": "switch",
        "z": "882af5a6.a58b28",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 120,
        "wires": [
            [
                "39cac321.c87fbc"
            ]
        ]
    },
    {
        "id": "947fea87.7b4ba8",
        "type": "debug",
        "z": "882af5a6.a58b28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 240,
        "wires": []
    },
    {
        "id": "4b651e29.d8987",
        "type": "function",
        "z": "882af5a6.a58b28",
        "name": "Was last state == machine running?",
        "func": "if (flow.get(\"currentState\")==0) {\n return msg;\n} else {\n return null;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 360,
        "wires": [
            [
                "de0540c3.06dbd"
            ]
        ]
    },
    {
        "id": "4888b756.23e248",
        "type": "mqtt out",
        "z": "ae592577.420618",
        "name": "MQTT-OUT: Verarbeitete Daten",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5dff9791.d1b278",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "d996e872.8c0c88",
        "type": "function",
        "z": "ae592577.420618",
        "name": "Format: processValue",
        "func": "var namePV = env.get(\"namePV\")\nvar tempJSON = {\n\"timestamp_ms\": Date.now(),\n}\ntempJSON[namePV]=msg.payload;\nmsg.payload= tempJSON;\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/processValue\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 60,
        "wires": [
            [
                "4888b756.23e248"
            ]
        ]
    },
    {
        "id": "a85c6ef3.fcf27",
        "type": "function",
        "z": "fc9d8f9c.14845",
        "name": "Format: count",
        "func": "msg.payload = {\n\"timestamp_ms\": Date.now(),\n\"count\": msg.payload\n}\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/count\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "767ff1ad.008cd"
            ]
        ]
    },
    {
        "id": "767ff1ad.008cd",
        "type": "mqtt out",
        "z": "fc9d8f9c.14845",
        "name": "MQTT-OUT: Verarbeitete Daten",
        "topic": "",
        "qos": "2",
        "retain": "",
        "broker": "5dff9791.d1b278",
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "1222fb98.eff494",
        "type": "mqtt out",
        "z": "b60b06bc.cdb4c8",
        "name": "MQTT-OUT: Verarbeitete Daten",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "5dff9791.d1b278",
        "x": 470,
        "y": 80,
        "wires": []
    },
    {
        "id": "c9fa6d5b.84b01",
        "type": "function",
        "z": "b60b06bc.cdb4c8",
        "name": "Format: detectedAnomaly",
        "func": "msg.payload = {\n\"timestamp_ms\": Date.now(),\n\"detectedAnomaly\": msg.payload\n}\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/detectedAnomaly\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "1222fb98.eff494"
            ]
        ]
    },
    {
        "id": "6e72af6b.e6363",
        "type": "function",
        "z": "b77cb6f5.685178",
        "name": "Format: Activity",
        "func": "msg.payload = {\n\"timestamp_ms\": Date.now(),\n\"activity\": msg.payload\n}\nmsg.topic = \"ia/\"+env.get(\"customerID\")+\"/\"+env.get(\"location\")+\"/\"+env.get(\"AssetID\")+\"/activity\"\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 80,
        "wires": [
            [
                "c68b3ec2.40d31"
            ]
        ]
    },
    {
        "id": "c68b3ec2.40d31",
        "type": "mqtt out",
        "z": "b77cb6f5.685178",
        "name": "MQTT-OUT: Verarbeitete Daten",
        "topic": "",
        "qos": "2",
        "retain": "",
        "broker": "5dff9791.d1b278",
        "x": 570,
        "y": 80,
        "wires": []
    },
    {
        "id": "96c50010.c50af",
        "type": "subflow:b77cb6f5.685178",
        "z": "45f7c4f7.dff1cc",
        "g": "7cef6b1d.d23a54",
        "name": "",
        "env": [
            {
                "name": "customerID",
                "value": "factoryinsight",
                "type": "str"
            },
            {
                "name": "location",
                "value": "test",
                "type": "str"
            },
            {
                "name": "AssetID",
                "value": "test",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 140,
        "wires": []
    },
    {
        "id": "ae8cdaa6.a56a68",
        "type": "subflow:b60b06bc.cdb4c8",
        "z": "45f7c4f7.dff1cc",
        "g": "7cef6b1d.d23a54",
        "name": "",
        "env": [
            {
                "name": "customerID",
                "value": "factoryinsight",
                "type": "str"
            },
            {
                "name": "location",
                "value": "test",
                "type": "str"
            },
            {
                "name": "AssetID",
                "value": "test",
                "type": "str"
            }
        ],
        "x": 590,
        "y": 220,
        "wires": []
    },
    {
        "id": "c8d8afe1.59fa",
        "type": "subflow:fc9d8f9c.14845",
        "z": "45f7c4f7.dff1cc",
        "g": "7cef6b1d.d23a54",
        "name": "",
        "env": [
            {
                "name": "customerID",
                "value": "factoryinsight",
                "type": "str"
            },
            {
                "name": "location",
                "value": "test",
                "type": "str"
            },
            {
                "name": "AssetID",
                "value": "test",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "246a1685.58379a",
        "type": "subflow:ae592577.420618",
        "z": "45f7c4f7.dff1cc",
        "g": "7cef6b1d.d23a54",
        "name": "",
        "env": [
            {
                "name": "customerID",
                "value": "factoryinsight",
                "type": "str"
            },
            {
                "name": "location",
                "value": "test",
                "type": "str"
            },
            {
                "name": "AssetID",
                "value": "test",
                "type": "str"
            }
        ],
        "x": 570,
        "y": 260,
        "wires": []
    },
    {
        "id": "7bb0392e.8a3bf8",
        "type": "subflow:882af5a6.a58b28",
        "z": "45f7c4f7.dff1cc",
        "g": "7cef6b1d.d23a54",
        "name": "",
        "env": [
            {
                "name": "customerID",
                "value": "factoryinsight",
                "type": "str"
            },
            {
                "name": "location",
                "value": "test",
                "type": "str"
            },
            {
                "name": "AssetID",
                "value": "test",
                "type": "str"
            },
            {
                "name": "customer_states",
                "value": "",
                "type": "str"
            }
        ],
        "x": 560,
        "y": 100,
        "wires": []
    },
    {
        "id": "b34237d9.7d2cc8",
        "type": "subflow:9d0bf5c6.2530b8",
        "z": "45f7c4f7.dff1cc",
        "g": "7cef6b1d.d23a54",
        "name": "",
        "env": [
            {
                "name": "customerID",
                "value": "factoryinsight",
                "type": "str"
            },
            {
                "name": "location",
                "value": "test",
                "type": "str"
            },
            {
                "name": "AssetID",
                "value": "test",
                "type": "str"
            }
        ],
        "x": 580,
        "y": 60,
        "wires": []
    },
    {
        "id": "6e3f046.47cecfc",
        "type": "inject",
        "z": "45f7c4f7.dff1cc",
        "g": "62375092.d1012",
        "name": "True",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "96c50010.c50af"
            ]
        ]
    },
    {
        "id": "f8283b61.08d9e8",
        "type": "inject",
        "z": "45f7c4f7.dff1cc",
        "g": "62375092.d1012",
        "name": "False",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "8",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "8dfcab17.6eb338"
            ]
        ]
    },
    {
        "id": "5b0afc76.d39564",
        "type": "inject",
        "z": "45f7c4f7.dff1cc",
        "g": "62375092.d1012",
        "name": "Number",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "60000",
        "payloadType": "num",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "ae8cdaa6.a56a68"
            ]
        ]
    },
    {
        "id": "20f4ef35.92e22",
        "type": "inject",
        "z": "45f7c4f7.dff1cc",
        "g": "62375092.d1012",
        "name": "True",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "88623f34.27cac"
            ]
        ]
    },
    {
        "id": "5649a4d0.ce43ec",
        "type": "inject",
        "z": "45f7c4f7.dff1cc",
        "g": "62375092.d1012",
        "name": "True",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "246a1685.58379a"
            ]
        ]
    },
    {
        "id": "c3372d57.50822",
        "type": "mqtt in",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "name": "",
        "topic": "ia/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "5dff9791.d1b278",
        "nl": false,
        "rap": false,
        "x": 150,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "a8e1a854.89e108",
        "type": "s7 in",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "endpoint": "",
        "mode": "single",
        "variable": "",
        "diff": true,
        "name": "",
        "x": 150,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "cdd3a9a3.ceed18",
        "type": "s7 out",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "endpoint": "",
        "variable": "",
        "name": "",
        "x": 150,
        "y": 660,
        "wires": []
    },
    {
        "id": "28b0d095.a6f2e",
        "type": "http request",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "name": "REST",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 150,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "15717681.474919",
        "type": "tcp request",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "server": "",
        "port": "",
        "out": "time",
        "splitc": "0",
        "name": "TCP-IP",
        "x": 160,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "28ac3b5b.0c6e64",
        "type": "inject",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "6c82df5c.fb975"
            ]
        ]
    },
    {
        "id": "37c52f75.d6a81",
        "type": "modbus-read",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "",
        "dataType": "",
        "adr": "",
        "quantity": "",
        "rate": "",
        "rateUnit": "",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3b5e6754.ff4f18",
        "type": "cronplus",
        "z": "45f7c4f7.dff1cc",
        "g": "62375092.d1012",
        "name": "Default shifts",
        "outputField": "duration_in_minutes",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output2",
        "outputs": 2,
        "options": [
            {
                "name": "shift_1",
                "topic": "shift_1",
                "payloadType": "num",
                "payload": "180",
                "expressionType": "cron",
                "expression": "0 00 9 * * 1-5",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule2",
                "topic": "schedule2",
                "payloadType": "num",
                "payload": "400",
                "expressionType": "cron",
                "expression": "0 0 13 * * 1-5",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 150,
        "y": 260,
        "wires": [
            [
                "e61e8604.509d48"
            ],
            []
        ]
    },
    {
        "id": "e61e8604.509d48",
        "type": "subflow:587a158d.20327c",
        "z": "45f7c4f7.dff1cc",
        "g": "7cef6b1d.d23a54",
        "name": "",
        "env": [],
        "x": 560,
        "y": 300,
        "wires": []
    },
    {
        "id": "8dfcab17.6eb338",
        "type": "delay",
        "z": "45f7c4f7.dff1cc",
        "name": "",
        "pauseType": "delay",
        "timeout": "333",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "96c50010.c50af"
            ]
        ]
    },
    {
        "id": "88623f34.27cac",
        "type": "delay",
        "z": "45f7c4f7.dff1cc",
        "name": "",
        "pauseType": "delay",
        "timeout": "666",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "c8d8afe1.59fa"
            ]
        ]
    },
    {
        "id": "6c82df5c.fb975",
        "type": "OpcUa-Item",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "item": "",
        "datatype": "",
        "value": "",
        "name": "",
        "x": 340,
        "y": 540,
        "wires": [
            [
                "392b9fc.5171e6"
            ]
        ]
    },
    {
        "id": "392b9fc.5171e6",
        "type": "OpcUa-Client",
        "z": "45f7c4f7.dff1cc",
        "d": true,
        "g": "ba92812b.1beda",
        "endpoint": "",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "",
        "x": 520,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "69acedbea0a497d9",
        "type": "inject",
        "z": "41c9c6783cbe3070",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ia/factoryinsight/test/test/count",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "2ec74b8f684fec8a"
            ]
        ]
    },
    {
        "id": "2ec74b8f684fec8a",
        "type": "function",
        "z": "41c9c6783cbe3070",
        "name": "",
        "func": "msg.payload = {\n\"timestamp_ms\": Date.now(),\n\"count\": 10\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "b5f390e651f93b89"
            ]
        ]
    },
    {
        "id": "b5f390e651f93b89",
        "type": "mqtt out",
        "z": "41c9c6783cbe3070",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5dff9791.d1b278",
        "x": 530,
        "y": 180,
        "wires": []
    }
    ]
    {{- else}}
    {{- print $settings | nindent 4 }}
    {{- end}}
{{end}}
