# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
{{if or .Values.factoryinput.enabled .Values._000_commonConfig.datainput.enabled}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput
  labels:
  {{- include "united-manufacturing-hub.labels.factoryinput" . | nindent 4}}
  {{if .Values.factoryinput.annotations}}
  annotations:
  {{- toYaml .Values.factoryinput.annotations | nindent 4}}
  {{end}}
spec:
  replicas: {{.Values.factoryinput.replicas}}
  serviceName: factoryinput
  volumeClaimTemplates:
    - metadata:
        name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput-data
        finalizers:
          - kubernetes.io/pvc-protection
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{.Values.factoryinput.storageRequest}}
  selector:
    matchLabels:
      name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput
      {{- include "united-manufacturing-hub.labels.factoryinput" . | nindent 8}}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 70
      containers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput
          {{if .Values.factoryinput.image.tag}}
          image: {{.Values.factoryinput.image.repository}}:{{.Values.factoryinput.image.tag}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{- else}}
          image: {{.Values.factoryinput.image.repository}}:{{.Chart.AppVersion}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{end}}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{if .Values._000_commonConfig.debug.enableFGTrace}}
            - containerPort: 1337
              name: fgtrace
              protocol: TCP
          {{end}}
          imagePullPolicy: {{.Values.factoryinput.image.pullPolicy}}
          env:
            - name: CERTIFICATE_NAME
              {{- if .Values._000_commonConfig.infrastructure.mqtt.tls.useTLS}}
              value: "USE_TLS"
              {{- else}}
              value: "NO_CERT"
              {{- end}}

            - name: LOGGING_LEVEL
              value: {{.Values.factoryinput.env.loggingLevel}}

            - name: BROKER_URL
              {{- if .Values._000_commonConfig.infrastructure.mqtt.tls.useTLS}}
              value: ssl://{{include "united-manufacturing-hub.fullname" .}}-hivemqce-local-service:8883
              {{- else}}
              value: mqtt://{{include "united-manufacturing-hub.fullname" .}}-hivemqce-local-service:1883
              {{- end}}

            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MICROSERVICE_NAME
              valueFrom:
                fieldRef:
                    fieldPath: metadata.labels['app.kubernetes.io/name']

            - name: SERIAL_NUMBER
              value: {{.Values._000_commonConfig.serialNumber}}

            - name: VERSION
              value: {{.Values.factoryinput.env.version | quote}}

            - name: FACTORYINPUT_USER
              valueFrom:
                secretKeyRef:
                  name: factoryinput-secret
                  key: customerID

            - name: FACTORYINPUT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: factoryinput-secret
                  key: password

            - name: MQTT_PASSWORD
              value: {{.Values.factoryinput.mqtt.password | quote}}

            - name: MQTT_QUEUE_HANDLER
              value: {{.Values.factoryinput.env.mqttQueueHandler | quote}}

            {{$index := 1}}
            {{range $customerName, $password := .Values.customers | default dict}}
            - name: CUSTOMER_NAME_{{$index}}
              value: {{$customerName}}
            - name: CUSTOMER_PASSWORD_{{$index}}
              value: {{$password}}
              {{$index = add $index 1}}
            {{end}}
            {{if .Values._000_commonConfig.debug.enableFGTrace}}
            - name: DEBUG_ENABLE_FGTRACE
              value: "true"
            {{end}}

          volumeMounts:
            - name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput-data
              mountPath: /data
            - name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput-mqtt-certificates
              mountPath: /SSL_certs/mqtt
              readOnly: true


          livenessProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 10
            failureThreshold: 5 # 5*periodSeconds (10) => 50 sec max startup time


          # define a readiness probe that checks every 5 seconds
          #readinessProbe:
          #  httpGet:
          #    path: /ready
          #    port: 8086
          #  periodSeconds: 5
          resources: {}
          #volumes:
          #- name: secret-volume
          #secret:
          #secretName: factoryinput-secret
      volumes:
        - name: {{include "united-manufacturing-hub.fullname" .}}-factoryinput-mqtt-certificates
          secret:
            secretName: {{include "united-manufacturing-hub.fullname" .}}-factoryinput-mqtt-secrets
      serviceAccountName: ""
      restartPolicy: Always
  {{end}}
