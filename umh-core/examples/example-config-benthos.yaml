# Copyright 2025 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

agent:
  metricsPort: 8080

internal:
  redpanda:
    desiredState: stopped
  benthos:
    - name: hello-world
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-2
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 2!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-3
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 3!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-4
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 4!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-5
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 5!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-6
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 6!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-7
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 7!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-8
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 8!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-9
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 9!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
    - name: hello-world-10
      desiredState: active
      benthosServiceConfig:
        input:
          generate:
            mapping: root = "hello world from Benthos 10!"
            interval: 1s # Output every 1 seconds
            count: 0 # Set to 0 for unlimited messages
        output:
          stdout: {}
