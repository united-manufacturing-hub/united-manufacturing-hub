# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
{{if or .Values.kafkatopostgresql.enabled (and .Values._000_commonConfig.infrastructure.kafka.enabled .Values._000_commonConfig.datastorage.enabled .Values._000_commonConfig.datamodel_v2.enabled)}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2
  labels:
    {{- include "united-manufacturing-hub.labels.kafkatopostgresqlv2" . | nindent 4}}
  {{if .Values.kafkatopostgresqlv2.annotations}}
  annotations:
    {{- toYaml .Values.kafkatopostgresqlv2.annotations | nindent 4}}
  {{end}}
spec:
  replicas: {{.Values.kafkatopostgresqlv2.replicas}}
  selector:
    matchLabels:
      name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2
        {{- include "united-manufacturing-hub.labels.kafkatopostgresqlv2" . | nindent 8}}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2
                topologyKey: "kubernetes.io/hostname"
      # Be nice to kafka & the db
      terminationGracePeriodSeconds: 180
      initContainers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgres-init
          {{if .Values.kafkatopostgresqlv2.image.tag}}
          image: {{.Values.kafkatopostgresqlv2.initContainer.repository}}:{{.Values.kafkatopostgresqlv2.initContainer.tag}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{- else}}
          image: {{.Values.kafkatopostgresqlv2.initContainer.repository}}:{{.Chart.AppVersion}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
          volumeMounts:
            - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2-certificates
              mountPath: /SSL_certs/kafka
              readOnly: true
          {{end}}
          {{end}}
          imagePullPolicy: {{.Values.kafkatopostgresqlv2.initContainer.pullPolicy}}
          env:
            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{include "united-manufacturing-hub.fullname" .}}-kafka:9092
            - name: KAFKA_TOPICS
              value: {{.Values._000_commonConfig.infrastructure.kafka.defaultTopics}}

            - name: KAFKA_USE_SSL
              value: {{.Values._000_commonConfig.infrastructure.kafka.useSSL | default "false" | quote}}
            - name: KAFKA_SSL_KEY_PASSWORD
              {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
              value: {{.Values._000_commonConfig.infrastructure.kafka.tls.kafkatopostgresqlv2.sslKeyPassword | quote}}
              {{- else}}
              value: ""
              {{- end}}
      containers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2
          {{if .Values.kafkatopostgresqlv2.image.tag}}
          image: {{.Values.kafkatopostgresqlv2.image.repository}}:{{.Values.kafkatopostgresqlv2.image.tag}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{- else}}
          image: {{.Values.kafkatopostgresqlv2.image.repository}}:{{.Chart.AppVersion}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{end}}
          imagePullPolicy: {{.Values.kafkatopostgresqlv2.image.pullPolicy}}
          {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
          volumeMounts:
            - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2-certificates
              mountPath: /SSL_certs/kafka
              readOnly: true
          {{end}}
          ports:
            - name: metrics
              containerPort: 2112
              protocol: TCP
          {{if .Values._000_commonConfig.debug.enableFGTrace}}
            - containerPort: 1337
              name: fgtrace
              protocol: TCP
          {{end}}
          env:

            - name: POSTGRES_HOST
              value: {{.Values.factoryinsight.db_host}}
            - name: POSTGRES_DATABASE
              value: {{.Values.factoryinsight.db_database}}
            - name: POSTGRES_USER
              value: {{.Values.factoryinsight.db_user}}
            - name: POSTGRES_PASSWORD
              value: {{.Values._000_commonConfig.datastorage.db_password}}
            - name: POSTGRES_SSLMODE
              value: "require"

            - name: LOGGING_LEVEL
              value: PRODUCTION

            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{include "united-manufacturing-hub.fullname" .}}-kafka:9092
            - name: MEMORY_REQUEST
              value: {{.Values.kafkatopostgresqlv2.resources.requests.memory}}

            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MICROSERVICE_NAME
              valueFrom:
                fieldRef:
                    fieldPath: metadata.labels['app.kubernetes.io/name']

            - name: KAFKA_USE_SSL
              value: {{.Values._000_commonConfig.infrastructure.kafka.useSSL | default "false" | quote}}
            - name: KAFKA_SSL_KEY_PASSWORD
              {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
              value: {{.Values._000_commonConfig.infrastructure.kafka.tls.kafkatopostgresqlv2.sslKeyPassword | quote}}
              {{- else}}
              value: ""
              {{- end}}

            - name: SERIAL_NUMBER
              value: {{.Values._000_commonConfig.serialNumber | quote}}

            {{if .Values._000_commonConfig.debug.enableFGTrace}}
            - name: DEBUG_ENABLE_FGTRACE
              value: "true"
            {{end}}
          # define a liveness probe that checks every 5 seconds, starting after 5 seconds
          livenessProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 10
            failureThreshold: 5 # 5*periodSeconds (10) => 50 sec max startup time


          resources:
            limits:
              cpu: {{.Values.kafkatopostgresqlv2.resources.limits.cpu}}
              memory: {{.Values.kafkatopostgresqlv2.resources.limits.memory}}
            requests:
              cpu: {{.Values.kafkatopostgresqlv2.resources.requests.cpu}}
              memory: {{.Values.kafkatopostgresqlv2.resources.requests.memory}}
      {{ if and (hasKey .Values._000_commonConfig.infrastructure.kafka "useSSL") .Values._000_commonConfig.infrastructure.kafka.useSSL }}
      volumes:
        - name: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2-certificates
          secret:
            secretName: {{include "united-manufacturing-hub.fullname" .}}-kafkatopostgresqlv2-secrets
      {{end}}

      serviceAccountName: ""
      restartPolicy: Always
{{end}}

