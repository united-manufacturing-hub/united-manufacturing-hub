# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
{{if or .Values.factoryinsight.enabled .Values._000_commonConfig.datastorage.enabled}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{include "united-manufacturing-hub.fullname" .}}-factoryinsight-deployment
  labels:
    {{- include "united-manufacturing-hub.labels.common" . | nindent 4}}
    {{- include "united-manufacturing-hub.labels.factoryinsight" . | nindent 4}}
  {{if .Values.factoryinsight.annotations}}
  annotations:
    {{- toYaml .Values.factoryinsight.annotations | nindent 4}}
  {{end}}
spec:
  replicas: {{.Values.factoryinsight.replicas}}
  selector:
    matchLabels:
      {{- include "united-manufacturing-hub.matchLabels" . | nindent 6}}
      {{- include "united-manufacturing-hub.labels.factoryinsight" . | nindent 6}}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      name: {{include "united-manufacturing-hub.fullname" .}}-factoryinsight
      labels:
        {{- include "united-manufacturing-hub.labels.common" . | nindent 8}}
        {{- include "united-manufacturing-hub.labels.factoryinsight" . | nindent 8}}
        redis-client: "true"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: {{include "united-manufacturing-hub.fullname" .}}-factoryinsight
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-factoryinsight
          {{if .Values.factoryinsight.image.tag}}
          image: {{.Values.factoryinsight.image.repository}}:{{.Values.factoryinsight.image.tag}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{- else}}
          image: {{.Values.factoryinsight.image.repository}}:{{.Chart.AppVersion}}{{- if .Values._000_commonConfig.racedetector.enabled}}-race{{- end}}
          {{end}}
          imagePullPolicy: IfNotPresent
          ports:
              - name: http
                containerPort: 80
                protocol: TCP
          {{if .Values._000_commonConfig.debug.enableFGTrace}}
              - containerPort: 1337
                name: fgtrace
                protocol: TCP
          {{end}}
          resources:
            limits:
              cpu: {{.Values.factoryinsight.resources.limits.cpu}}
            requests:
              cpu: {{.Values.factoryinsight.resources.requests.cpu}}
          env:
            - name: LOGGING_LEVEL
              value: PRODUCTION
            - name: REDIS_URI
              value: {{.Values.factoryinsight.redis.URI}}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redispassword

            - name: POSTGRES_HOST
              value: {{.Values.factoryinsight.db_host}}
            - name: POSTGRES_PORT
              value: {{.Values.factoryinsight.db_port | quote}}
            - name: POSTGRES_DATABASE
              value: {{.Values.factoryinsight.db_database}}
            - name: POSTGRES_USER
              value: {{.Values.factoryinsight.db_user}}
            - name: POSTGRES_PASSWORD
              value: {{.Values._000_commonConfig.datastorage.db_password}}

              {{$index := 1}}
              {{range $customerName, $password := .Values.customers | default dict}}
            - name: CUSTOMER_NAME_{{$index}}
              value: {{$customerName}}
            - name: CUSTOMER_PASSWORD_{{$index}}
              value: {{$password}}
              {{$index = add $index 1}}
              {{end}}

            - name: FACTORYINSIGHT_USER
              value: {{.Values.factoryinsight.user}}
            - name: FACTORYINSIGHT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: factoryinsight-secret
                  key: password
            - name: VERSION
              value: {{.Values.factoryinsight.version | default 2 | quote}}
            - name: INSECURE_NO_AUTH
              value: {{.Values.factoryinsight.insecure_no_auth | default "false" | quote}}

            {{if .Values._000_commonConfig.debug.enableFGTrace}}
            - name: DEBUG_ENABLE_FGTRACE
              value: "true"
            {{end}}
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

            - name: MICROSERVICE_NAME
              valueFrom:
                fieldRef:
                    fieldPath: metadata.labels['app.kubernetes.io/name']

            - name: SERIAL_NUMBER
              value: {{.Values._000_commonConfig.serialNumber}}

          livenessProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 10
            failureThreshold: 5 # 5*periodSeconds (10) => 50 sec max startup time

          # define a readiness probe that checks every 15 seconds
          readinessProbe:
            httpGet:
              path: /ready
              port: 8086
            periodSeconds: 1

      restartPolicy: Always
      terminationGracePeriodSeconds: 300 # the longest requests can up to 4 minutes
{{end}}
