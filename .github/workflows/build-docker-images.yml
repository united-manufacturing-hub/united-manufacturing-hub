# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build Docker Images

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docker:
    timeout-minutes: 60
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        # component: [ 'factoryinsight', 'grafana_umh', 'hivemq_init', 'kafka_init', 'metrics', 'sensorconnect', 'barcodereader' ]
        component: [ 'factoryinsight' ]
        architecture: [ 'amd64', 'arm64' ]
    runs-on:
      group: ${{ matrix.architecture == 'arm64' && 'arc-runners-small' || 'arc-runners' }}
    env:
      PR_ID: ${{ github.event.pull_request.number }}
    outputs:
      BUILD_TAG: ${{ steps.output-build-tag.outputs.BUILD_TAG }}
    steps:
      - name: Use Checkout and Setup Workflow
        uses: ./.github/workflows/checkout.yaml
        with:
          branch: ${{ github.event.pull_request && github.head_ref || github.ref_name }}

      - name: Login to GitHub Container registry
        uses: docker/login-action@v3
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: management.umh.app/oci/tonistiigi/binfmt:latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Build variables
        run: |
          export GIT_TAG         := $(shell git describe --tags --always)
          export DOCKER_FILE    := ./deployment/${{ matrix.component }}/Dockerfile
          export PLATFORM       := ${{ matrix.architecture }}
          
          if ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}; then
            export BUILD_TAG := ghcr.io/united-manufacturing-hub/${{ matrix.component }}:latest-$(PLATFORM)
          fi
          if ${{ (github.event_name == 'push' && github.ref == 'refs/heads/staging') || github.event.pull_request.head.ref == 'staging' }}; then
            export BUILD_TAG := ghcr.io/united-manufacturing-hub/${{ matrix.component }}:staging-$(PLATFORM)
          fi
          if ${{ github.event_name == 'pull_request' }}; then
            export BUILD_TAG := ghcr.io/united-manufacturing-hub/${{ matrix.component }}:pr-${{ env.PR_ID }}-$(PLATFORM)
          fi
          if ${{ github.event_name == 'merge_group' }}; then
            export BUILD_TAG := ghcr.io/united-manufacturing-hub/${{ matrix.component }}:$(BRANCH)-$(PLATFORM)
          fi
          if ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}; then
              export BUILD_TAG := ghcr.io/united-manufacturing-hub/${{ matrix.component }}:$(GIT_TAG)-$(PLATFORM)
          fi
          
          docker buildx build --platform linux/$(PLATFORM) --provenance=false --progress=plain \
             --build-arg APP_VERSION=$(GIT_TAG) -t $(BUILD_TAG) -f $(DOCKER_FILE) --push ../
          
          echo "BUILD_TAG=$(BUILD_TAG)" >> $GITHUB_OUTPUT

  create-manifests:
    needs: build-docker
    if: needs.build-docker.outputs.BUILD_TAG != ''
    permissions:
      contents: read
      packages: write
    runs-on:
      group: arc-runners
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        component: [ 'factoryinsight' ]
    steps:
      - name: Login to GitHub Container registry
        uses: docker/login-action@v3
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create multiarch manifests
        run: |
          docker buildx imagetools create -t ghcr.io/united-manufacturing-hub/${{ matrix.component}}:${{ needs.build-docker.outputs.BUILD_TAG }} \
            ghcr.io/united-manufacturing-hub/${{ matrix.component}}:${{ needs.build-docker.outputs.BUILD_TAG }}-amd64 \
            ghcr.io/united-manufacturing-hub/${{ matrix.component}}:${{ needs.build-docker.outputs.BUILD_TAG }}-arm64