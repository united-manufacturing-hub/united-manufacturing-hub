// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/united-manufacturing-hub/united-manufacturing-hub/umh-core/pkg/communicator/actions/providers (interfaces: MetricsProvider)
//
// Generated by this command:
//
//	mockgen -destination=metrics_provider_mock.go -package=providers github.com/united-manufacturing-hub/united-manufacturing-hub/umh-core/pkg/communicator/actions/providers MetricsProvider
//

// Package providers is a generated GoMock package.
package providers

import (
	reflect "reflect"

	fsm "github.com/united-manufacturing-hub/united-manufacturing-hub/umh-core/pkg/fsm"
	models "github.com/united-manufacturing-hub/united-manufacturing-hub/umh-core/pkg/models"
	gomock "go.uber.org/mock/gomock"
)

// MockMetricsProvider is a mock of MetricsProvider interface.
type MockMetricsProvider struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsProviderMockRecorder
	isgomock struct{}
}

// MockMetricsProviderMockRecorder is the mock recorder for MockMetricsProvider.
type MockMetricsProviderMockRecorder struct {
	mock *MockMetricsProvider
}

// NewMockMetricsProvider creates a new mock instance.
func NewMockMetricsProvider(ctrl *gomock.Controller) *MockMetricsProvider {
	mock := &MockMetricsProvider{ctrl: ctrl}
	mock.recorder = &MockMetricsProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsProvider) EXPECT() *MockMetricsProviderMockRecorder {
	return m.recorder
}

// GetMetrics mocks base method.
func (m *MockMetricsProvider) GetMetrics(payload models.GetMetricsRequest, snapshotManager *fsm.SnapshotManager) (models.GetMetricsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetrics", payload, snapshotManager)
	ret0, _ := ret[0].(models.GetMetricsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetrics indicates an expected call of GetMetrics.
func (mr *MockMetricsProviderMockRecorder) GetMetrics(payload, snapshotManager any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetrics", reflect.TypeOf((*MockMetricsProvider)(nil).GetMetrics), payload, snapshotManager)
}
