# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build Docker Images

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  barcodereader:
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/barcodereader
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/barcodereader/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  factoryinsight:   
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/factoryinsight
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/factoryinsight/Dockerfile
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}

  grafana-umh:
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/grafana-umh
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/grafana-umh/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  hivemq-init:
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/hivemq-init
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/hivemq-init/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  kafka-bridge:
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/kafka-bridge
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/kafka-bridge/Dockerfile
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}

  kafka-init:
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/kafka-init
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/kafka-init/Dockerfile
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}


  kafka-to-postgresql:
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/kafka-to-postgresql
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/kafka-to-postgresql/Dockerfile
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}


  kafka-to-postgresql-v2:
    permissions:
      packages: write
      contents: read
    runs-on: 
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/kafka-to-postgresql-v2
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/kafka-to-postgresql-v2/Dockerfile
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}
          
  metrics:    
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/metrics
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/metrics/Dockerfile
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}

  mqtt-kafka-bridge:
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/mqtt-kafka-bridge
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/mqtt-kafka-bridge/Dockerfile
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}

  sensorconnect:
    permissions:
      packages: write
      contents: read
    runs-on:  
      group: large-runners
    steps:
      - uses: actions/checkout@v4
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/united-manufacturing-hub/sensorconnect
          tags: |
            type=ref,event=branch,branch=main,staging
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/sensorconnect/Dockerfile
          push: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}
