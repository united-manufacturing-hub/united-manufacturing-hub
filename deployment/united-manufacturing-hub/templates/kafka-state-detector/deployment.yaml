# Copyright 2023 UMH Systems GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
{{if or .Values.kafkastatedetector.enabled .Values._000_commonConfig.kafkaStateDetector.enabled}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{include "united-manufacturing-hub.fullname" .}}-kafkastatedetector
  labels:
    {{- include "united-manufacturing-hub.labels.kafkastatedetector" . | nindent 4}}
  {{if .Values.kafkastatedetector.annotations}}
  annotations:
    {{- toYaml .Values.kafkastatedetector.annotations | nindent 4}}
  {{end}}
spec:
  selector:
    matchLabels:
      name: {{include "united-manufacturing-hub.fullname" .}}-kafkastatedetector
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{include "united-manufacturing-hub.fullname" .}}-kafkastatedetector
        {{- include "united-manufacturing-hub.labels.kafkastatedetector" . | nindent 8}}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: {{include "united-manufacturing-hub.fullname" .}}-kafkastatedetector
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{include "united-manufacturing-hub.fullname" .}}-kafkastatedetector
          {{if .Values.kafkastatedetector.image.tag}}
          image: {{.Values.kafkastatedetector.image.repository}}:{{.Values.kafkastatedetector.image.tag}}
          {{- else}}
          image: {{.Values.kafkastatedetector.image.repository}}:{{.Chart.AppVersion}}
          {{end}}
          imagePullPolicy: {{.Values.kafkastatedetector.image.pullPolicy}}
          {{if .Values._000_commonConfig.debug.enableFGTrace}}
          ports:
            - containerPort: 1337
              name: fgtrace
              protocol: TCP
          {{end}}
          # define a liveness probe that checks every 5 seconds, starting after 5 seconds
          livenessProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /live
              port: 8086
            periodSeconds: 10
            failureThreshold: 5 # 5*periodSeconds (10) => 50 sec max startup time

          volumeMounts:
            - name: {{include "united-manufacturing-hub.fullname" .}}-kafkastatedetector-certificates
              mountPath: /SSL_certs/kafka
              readOnly: true
          env:
            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{include "united-manufacturing-hub.fullname" .}}-kafka:9092

            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MICROSERVICE_NAME
              valueFrom:
                fieldRef:
                    fieldPath: metadata.labels['app.kubernetes.io/name']

            - name: SERIAL_NUMBER
              value: {{.Values._000_commonConfig.serialNumber}}

            - name: ACTIVITY_ENABLED
              value: "{{.Values.kafkastatedetector.activityEnabled}}"

            - name: ANOMALY_ENABLED
              value: "{{.Values.kafkastatedetector.anomalyEnabled}}"

            - name: KAFKA_USE_SSL
              value: {{.Values._000_commonConfig.infrastructure.kafka.useSSL | quote}}
            - name: KAFKA_SSL_KEY_PASSWORD
              value: {{.Values._000_commonConfig.infrastructure.kafka.tls.kafkastatedetector.sslKeyPassword | quote}}

            {{if .Values._000_commonConfig.debug.enableFGTrace}}
            - name: DEBUG_ENABLE_FGTRACE
              value: "true"
            {{end}}
          resources: {}
      volumes:
        - name: {{include "united-manufacturing-hub.fullname" .}}-kafkastatedetector-certificates
          secret:
            secretName: {{include "united-manufacturing-hub.fullname" .}}-kafkastatedetector-secrets

      serviceAccountName: ""
      restartPolicy: Always
{{end}}

