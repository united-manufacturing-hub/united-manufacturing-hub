# See https://github.com/rancher/k3os/blob/master/README.md#configuration


# This will be used as serial number as well
# HOSTNAME DOES NOT ALLOW UNDERSCORES
hostname: development 

write_files:

# Write Helm values file
- content: |
    # mqttBridgeURL points factorycube-edge to factorycube-server
    mqttBridgeURL: "ssl://factorycube-server-vernemq-local-service.factorycube-server:8883"
    mqttBridgeTopic: "ia/factoryinsight"
   
    # scans only localhost by default to prevent spamming the network
    sensorconnect:
      iprange: "127.0.0.1/32"

    # Certficiates for MQTT Bridge
    # These are development certificates. DO NOT USE IN PRODUCTION (some idiots will still do it...)
    mqttBridgeCACert: |
        -----BEGIN CERTIFICATE-----
        MIIDSzCCAjOgAwIBAgIUI2id6KFXw/nEv9bRhVsDhzM/ozkwDQYJKoZIhvcNAQEL
        BQAwFjEUMBIGA1UEAwwLRWFzeS1SU0EgQ0EwHhcNMjEwNDA2MDkyNDM1WhcNMzEw
        NDA0MDkyNDM1WjAWMRQwEgYDVQQDDAtFYXN5LVJTQSBDQTCCASIwDQYJKoZIhvcN
        AQEBBQADggEPADCCAQoCggEBALh3vJroi6hcvcm3OmpXs26MsXmRiUhBgdrNSOzZ
        KjWpW+R9aMONu1KxoXAuj/pAwt5CkLAMQ5EI5H05OArYOKekLfMe3FRTEOUSvFU/
        qO0hBymJRJZRhECwWu01gL1OS4AXaxdjrXwx8H4URAiKa4FhJCWrSPCikNvzX4K2
        SSSZMbMXEddO9uoyBU83HcZdo8NX0QRUKXy6w/zVMsjyLSZCtk4BaLCmlidhcH91
        Hggl6JDk4CuYRfkmemyblzw2bKAlWqsppv/m1nkI3hEFvwN68cpfsNnQynfYpZkL
        ODuNnia+PIhl3XyDXkJCM2ylPObcmo0D9GV2/J0JZgu9y3ECAwEAAaOBkDCBjTAd
        BgNVHQ4EFgQUvW9fQDy1ACN7knRxApaEh3LxW78wUQYDVR0jBEowSIAUvW9fQDy1
        ACN7knRxApaEh3LxW7+hGqQYMBYxFDASBgNVBAMMC0Vhc3ktUlNBIENBghQjaJ3o
        oVfD+cS/1tGFWwOHMz+jOTAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIBBjANBgkq
        hkiG9w0BAQsFAAOCAQEAfDsmd4FaA4R0rS84hGqileIaUdwhGE5IAlj3W8Wd2O63
        xqThR+qN7TzO5Nki7tXNC2qCpuJmbPqrbB0CgwiobkwV+3vwF+VW8lCjSfYSpXbs
        nUN9CXMkQVWwbx8cAc7LlmpxU9evD21cBGOvD9AjngJwcofUUYXIuwWDdd1DVOaK
        AJ2Xc2MEjeVXdQnFZLF2FEPy/znJ0EIW/PhGgFHyQWn1inJU00FNfGQsdO8Ruloi
        VNVYOyMINZIG0V91l29XCViuSUrR1BSvK+YG2wiFqHV0bUytbY7uuNCh3S/HZEhE
        zC5KEddzKtihzW3yP4baMAmvu7atS0Gy7MLXWG+SRw==
        -----END CERTIFICATE-----
    mqttBridgeCert: |
        -----BEGIN CERTIFICATE-----
        MIIDVTCCAj2gAwIBAgIQD9BkaD7SQzUuHzt+0P4dRTANBgkqhkiG9w0BAQsFADAW
        MRQwEgYDVQQDDAtFYXN5LVJTQSBDQTAeFw0yMTA0MDYxMTMyNDZaFw0yNDAzMjEx
        MTMyNDZaMBIxEDAOBgNVBAMMB1RFU1RJTkcwggEiMA0GCSqGSIb3DQEBAQUAA4IB
        DwAwggEKAoIBAQDjPFLHojAiGFwv6kkH9ml1xtxhlD9O4FWDhzzvqaEW4tqtV1FM
        2Ta9f/nOosHTcJzy/nkpvfwz44rDSwpevLFZoPzdEI3WmsVJfb0R01lYnsLf7NyI
        NclSHjs3Octr1EyhP8SF2tvun1zqyirT/vPNB5+hfNhxLcCw4HYxsj4XkF69Af4W
        cLrmOHrzB2gcW1v7fozJ4MbXv2ra7jS/OseA3qIF2l8Go09mWYiLFfwtCk99rCGo
        RzhkrVmFShFLJ8dqTAbAwuX43oeqXhMlb3kyRaoi0aRCWhMagtEcW8LqKkO5k694
        y5Y+xTCMjJsujmWTCjHC5flfkmTk4/ClBAQDAgMBAAGjgaIwgZ8wCQYDVR0TBAIw
        ADAdBgNVHQ4EFgQUhFaNZPNBAIVwr5eIWTxFrbINU+QwUQYDVR0jBEowSIAUvW9f
        QDy1ACN7knRxApaEh3LxW7+hGqQYMBYxFDASBgNVBAMMC0Vhc3ktUlNBIENBghQj
        aJ3ooVfD+cS/1tGFWwOHMz+jOTATBgNVHSUEDDAKBggrBgEFBQcDAjALBgNVHQ8E
        BAMCB4AwDQYJKoZIhvcNAQELBQADggEBAGqggXaytY98QujICX8WxDljf4GvBN4e
        pQ8ejjvE9n88bW51h4JOxv6toNhz3FgPWj+PDRp6oUkfujkM0Wx8iHy4O+GceD2l
        tV91Ds86C7MncZqMN2fICkTbyzsk9ru5dqXtAIjX9Xlr5ZqDmtfgW5ze1+1UULAB
        5i9qaP02xQpQ1YwNPD5oSnbUJB7aKfnYsXlunBAxsjbdDoTGODdsjks1TWDKpbST
        0DRN+Jm6sggWvJitRPNWtxC2UE/DVWqtBGXPBvwFjQrJHpnqb9lpzVhxoWxY2AI4
        61eCOb6s6MslCkER6H9jlBhIxWpEPTNgdjth6uRA48FpAqze26Sj8L4=
        -----END CERTIFICATE-----
    mqttBridgePrivkey: |
        -----BEGIN PRIVATE KEY-----
        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDjPFLHojAiGFwv
        6kkH9ml1xtxhlD9O4FWDhzzvqaEW4tqtV1FM2Ta9f/nOosHTcJzy/nkpvfwz44rD
        SwpevLFZoPzdEI3WmsVJfb0R01lYnsLf7NyINclSHjs3Octr1EyhP8SF2tvun1zq
        yirT/vPNB5+hfNhxLcCw4HYxsj4XkF69Af4WcLrmOHrzB2gcW1v7fozJ4MbXv2ra
        7jS/OseA3qIF2l8Go09mWYiLFfwtCk99rCGoRzhkrVmFShFLJ8dqTAbAwuX43oeq
        XhMlb3kyRaoi0aRCWhMagtEcW8LqKkO5k694y5Y+xTCMjJsujmWTCjHC5flfkmTk
        4/ClBAQDAgMBAAECggEAJLKhS8xNqbP1b2eO09Jfxb2P6dJfRwXDybIVjT7/3QpV
        9pibcKXDyWbZmR1/3/3X2wZt2ufryxV8W33K9vHSUn9FVw5NWdM0+WFtH2vaig1Z
        u4AtPXIySSjIt2qGB6wJlCEQQ+3MhwUFpIVx1TrfdMU+an4XFnAlJmuZqvz2Oiew
        uT0mX4B/Sgexp8l1b0pVMytpsEm3HM7TYaUtRbqKQcQ5HXfc+Jsm+6mCTSj0C3Vp
        5njNwY/gBOtuO1bm+iH9RvH6TMNhBtgsfNp9p2WlrmCKM9koFrgYZscpkVKDjxTe
        Y/Mq6/9BHyWWxfN70QHZE61985JGVDbSSdnlyQ7KAQKBgQD2Zwp7LHqBWfBHnZL7
        4Pg05bjkAGd05BjL8KUQBOt2hFiXsPtw90BHdQXcywpd6XMx4D6tqfYLOfSSuFcm
        pAuM8APAnH0AB4TJ3DZK1vv26a/Sel6ahjttAwFUSEnb1UugVZR2/6TUF2c/RZjK
        QAOlpqL03Wl2T6xRBQmNXUhr4QKBgQDsFinUpthC9+R1hfKm2CCsd3l/GFbkRfAl
        YtKN69mrPx/NiB/jBO9UBEckhrDWdzgr1wZotpYGKFD8CvAmzl4IVrJIG22efNWx
        r8z4cTOH/b52m8pnlc1mdSuQv0RJuk0wC4eqRW8ybBcsA/JrPGKlFjvaxDLvpuW6
        Ewd7ZWvMYwKBgQDR8bnceWloDVnNq1Uxh930NEf0/OMplbALFF+P5qE5ukpB9WpI
        NmNufycfmWCb4+1i8c516fraVectnCOlqOCulVKdKrjW7ZEW7arU2ZiWKUbF773r
        q7O2jnjzdyR3SqXFVyXIvsmSbN5r6sDkkuaInhL60CyrwfbwkXoyGOk8AQKBgQDj
        7zoPz844SfHO7bYrE7voB6nL5Ynu9v82eUTkNPOA/H8OBwESQ+91ZHPzdf9B8PTQ
        jtfnPXF3HHGkBkN6lAABeQLDz4d0Xv5KgXsZ2uFvyLKc/Sjb/avD4hhfteqObEqd
        umQPJt6HBgkRO/ZPRovO67p6Krcq3i4qCrlMj80WFQKBgB19q/Ja0xPxrTaNjZTo
        VkAXHU/+pY1f2xHn7hkDlVHZiqLHb/1Jt17IUd9DhXfShneH+h37OPne3iT198aG
        Hjisp/sALgNP4jyR8w1a/OUIwBR5UhDFfPSwctyE12ojEn4syegh0sUK3i2m3Fmf
        Ub7w8oJqMapWI3XxHOLOAi6o
        -----END PRIVATE KEY-----

  path: /home/rancher/configs/factorycube-edge-development.yaml

- content: |
      #!/bin/bash
      LOCKDIR=/home/rancher/DO_NOT_DELETE

      # This runs as root

      if [ -d $LOCKDIR ]; then
      echo "Already configured. If you want to reconfigure delete /home/rancher/DO_NOT_DELETE"
      exit
      fi


      # Restart as rancher
      if [ $UID -eq 0 ]; then
      echo "Initial setup! Waiting 60 seconds for full startup..."
      sleep 60


      ###
      # Check if NTP server is reachable
      ###

      # Get both ntp servers from config
      NTP1=$(cat /k3os/system/config.yaml | grep ntp_servers -A2 | tail -n2 | grep - | sed 's/  - //g' | sed -n 1p)
      NTP2=$(cat /k3os/system/config.yaml | grep ntp_servers -A2 | tail -n2 | grep - | sed 's/  - //g' | sed -n 2p)

      echo "Testing NTP server $NTP1"
      echo "Testing NTP server $NTP2"

      # Try 5 times to reach either of them
      i="0"
      reachable_ntp_server_found=0
      while [ $i -lt 5 ]
      do
      if ! ping -c1 -W1 $NTP1 > /dev/null 2>&1 ; then
      echo "$NTP1 not reachable !"
      sleep 10
      else
      echo "$NTP1 is reachable !"
      reachable_ntp_server_found=1
      fi

      if ! ping -c1 -W1 $NTP2 > /dev/null 2>&1 ; then
      echo "$NTP2 not reachable !"
      sleep 10
      else
      echo "$NTP2 is reachable !"
      reachable_ntp_server_found=1
      fi
      if [ $reachable_ntp_server_found -eq 1 ]; then
      break
      fi
      i=$[$i+1]
      done

      if [ $reachable_ntp_server_found -eq 0 ]; then
      echo "No reachable NTP server found."
      echo "This can happen when you either have no connection to the internet or when you are in a limited network"
      echo "that blocks NTP requests (some universities do that). The solution is to connect ot the internet and / or"
      echo "to specify the allowed NTP servers manually in the development.yaml. Fore more information visit docs.umh.app"
      fi


      echo "Testing DNS lookup of umh.app"
      i="0"
      dns_query_successfull=0
      while [ $i -lt 10 ]
      do
      if ! nslookup umh.app  > /dev/null 2>&1 ; then
      echo "Failed to lookup umh.app"
      sleep 10
      else
      echo "DNS lookup successfull"
      dns_query_successfull=1
      break
      fi
      i=$[$i+1]
      done

      if [ $dns_query_successfull -eq 0 ]; then
      echo "Failed to resolve umh.app."
      echo "This can happen when you either have no connection to the internet or when you are in a limited network"
      echo "that blocks DNS requests (some universities do that). The solution is to connect ot the internet and / or"
      echo "to specify the allowed DNS servers manually in the development.yaml. Fore more information visit docs.umh.app"
      exit
      fi

      if [ $(date +%s) -lt 1609455600 ]; then
      echo "Current Date is < 01.01.2021, aborting setup"
      exit
      fi

      exec su "rancher" "$0" -- "$@"
      exit
      fi

      # The following code is run as rancher
      echo "Continuing with installation. Installing helm..."
      export VERIFY_CHECKSUM=false
      if ! curl -fsSL -o /home/rancher/get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 ; then
      echo "Failed to download helm installer, aborting setup"
      exit
      fi

      if ! chmod 700 /home/rancher/get_helm.sh ; then
      echo "Failed to change permission on get_helm.sh, aborting setup"
      exit
      fi

      if ! /home/rancher/get_helm.sh ; then
      echo "Failed to execute get_helm.sh, aborting setup"
      exit
      fi
      echo "Helm installed!"

      echo "Adding helm repo..."
      if ! helm repo add united-manufacturing-hub https://repo.umh.app/ ; then
      echo "Failed to add umh repository, aborting setup"
      exit
      fi
      echo "Added helm repo!"

      echo "Creating namespaces factorycube-edge and factorycube-server..."
      if ! kubectl create namespace factorycube-edge ; then
      echo "Failed to create kubernetes namespace for factorycube-edge, aborting setup"
      exit
      fi
      if ! kubectl create namespace factorycube-server ; then
      echo "Failed to create kubernetes namespace for factorycube-server, aborting setup"
      exit
      fi
      echo "Created namespaces!"

      echo "Install factorycube-edge..."
      if ! helm install factorycube-edge united-manufacturing-hub/factorycube-edge --values "/home/rancher/configs/factorycube-edge-development.yaml" --set serialNumber=$(hostname) --kubeconfig /etc/rancher/k3s/k3s.yaml -n factorycube-edge --devel ; then
      echo "Failed to install factorycube-edge using helm, aborting setup"
      exit
      fi
      echo "Installed factorycube-edge!"

      echo "Install factorycube-server..."
      if ! helm install factorycube-server united-manufacturing-hub/factorycube-server --kubeconfig /etc/rancher/k3s/k3s.yaml -n factorycube-server --devel ; then
      echo "Failed to install factorycube-server using helm, aborting setup"
      exit
      fi
      echo "Installed factorycube-server!"

      echo "Enabling SSH password authentification..."
      if ! sudo sed -i 's/PasswordAuthentication  no/PasswordAuthentication  yes/g' /etc/ssh/sshd_config ; then
      echo "Failed to enable password authentication, aborting setup"
      exit
      fi
      if ! sudo service sshd restart ; then
      echo "Failed to restart sshd, aborting setup"
      exit
      fi
      echo "Enabled SSH password authentification!"

      if ! mkdir $LOCKDIR ; then
      echo "Failed to create $LOCKDIR, setup failed !"
      exit
      fi

      echo "Initial setup finished! This might take now awhile..."

      num1=$(k3s -v | grep -o 'v1.[0-9][0-9]' | sed 's/v//g')
      num2="1.20"
      num3="1.21"

      if (( $(echo "$num1 < $num2" |bc -l) )); then
      echo "k3os version outdated ! This can cause various issues."
      echo "Installed version:   $num1"
      echo "Minimal version:     $num2"
      echo "Maximal version:     $num3"
      fi

      if (( $(echo "$num1 > $num3" |bc -l) )); then
      echo "k3os version too new! This can cause various issues."
      echo "Installed version:   $num1"
      echo "Minimal version:     $num2"
      echo "Maximal version:     $num3"
      fi

  path: /home/rancher/initial_setup.sh

run_cmd:
- "chmod +x /home/rancher/initial_setup.sh && /home/rancher/initial_setup.sh &"

k3os:
  password: rancher
  dns_nameservers:
  - 8.8.8.8
  - 1.1.1.1
  ntp_servers:
  - pool.ntp.org
  - ntp1.rwth-aachen.de
